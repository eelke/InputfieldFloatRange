<?php namespace ProcessWire;

/**
* ProcessWire FloatRange Inputfield
* By @eelkenet, https://eelke.net
*/

class InputfieldFloatRange extends InputfieldFloat {

	public static function getModuleInfo() {
		return array(
			'title' => __('Float (Range)', __FILE__),
			'summary' => __('Range slider inputfield, with precision', __FILE__), // Module Summary
			'version' => 003,
			'permanent' => false,
			'icon' => 'sliders',
			'href' => 'https://github.com/eelke/InputfieldFloatRange',
			'author' => 'Eelke Feenstra, eelke.net',
			'requires' => ["FieldtypeFloatRange", "ProcessWire>=3.0.83"]
		);
	}

	public function init() {
		parent::init();
		$this->set('displayValueField', 0);
		$this->set("inputType", 'range');
		$this->attr("step", ""); // blank means not set
	}

	public function render(){

		$otherFields = $this->config->js('InputfieldFloatRange') ? $this->config->js('InputfieldFloatRange') : [];

		$this->config->js('InputfieldFloatRange', array_merge($otherFields, [
			"Inputfield_" . $this->attr("name") => [
				'precision' => $this->get("precision"),
				'min' => $this->attr("min"),
				'max' => $this->attr("max"),
				'step' => (float) $this->attr("step")
			]
		]));

		if ($this->attr("step") == "") $this->attr("step", "any");
		$this->addClass($this->get("displayValueField") ? "InputfieldFloatRange--with-value" : "InputfieldFloatRange--without-value");
		$out = parent::render();

		if ($this->get("displayValueField")){
			$name = $this->attr('name');
			$out .= "<input type='text' class='InputfieldFloatRange__display' value='$this->value' />";
		}

		return $out;

	}

	/**
	 * Extend InputfieldFloat's inputType option with 'range'
	 */

	public function getConfigInputfields() {
		$inputfields = parent::getConfigInputfields();

		$f = $inputfields->get("inputType");
		$f->addOption('range', $this->_('Range'));
		$f->attr('value', $this->inputType);

		$f = $inputfields->get("min");
		$f->columnWidth = 50;

		$f = $inputfields->get("max");
		$f->columnWidth = 50;

		$f = $this->modules->get('InputfieldText');
		$f->attr('name', 'step');
		$f->attr('value', $this->attr("step") !== "" ? (float) str_replace(",",".",$this->attr("step")) : "");
		$f->label = $this->_('Step');
		$f->columnWidth = 50;
		$f->description = $this->_('Step increment (float). Leave blank to ignore');
		$inputfields->add($f);

		$f = $this->modules->get('InputfieldCheckbox');
		$f->attr('name', 'displayValueField');
		$f->set("value", 1);
		$f->attr('checked', $this->get('displayValueField') == 1 ? 'checked' : '');
		$f->label = $this->_('Show value next to slider');
		$f->label2 = $this->_('Show');
		$f->description = $this->_('Display the input of the field next to the slider');
		$f->columnWidth = 50;

		$inputfields->add($f);

		return $inputfields;
	}


}
